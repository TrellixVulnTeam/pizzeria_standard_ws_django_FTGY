# Generated by Django 3.0.6 on 2020-06-25 16:55

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('description', models.CharField(max_length=250, verbose_name='Descrição')),
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Endereço para a API')),
                ('title', models.CharField(max_length=100, verbose_name='Título')),
                ('shouldShow', models.BooleanField(default=True, verbose_name='Mostrar categoria ao cliente?')),
                ('image', models.ImageField(max_length=250, upload_to='images/standard_pizzeria/categories', verbose_name='Url do Ícone')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_option', models.CharField(choices=[('withdraw', 'Retirada'), ('delivery', 'Entrega')], default='withdraw', max_length=100, verbose_name='Tamanho-Preço')),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('dateRegister', models.DateTimeField(blank=True, default='2020-06-25T13:55:08.963236-03:00', null=True, verbose_name='Data do Último Registro')),
                ('description', models.CharField(max_length=250, verbose_name='Descrição')),
                ('ingredients', models.CharField(blank=True, max_length=250, null=True, verbose_name='Ingredientes')),
                ('notes', models.CharField(blank=True, max_length=250, null=True, verbose_name='Observações')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Deixar em branco se for Pizza', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço (Explícito)')),
                ('size', models.CharField(blank=True, help_text='Deixar em branco se for Pizza', max_length=50, null=True, verbose_name='Tamanho (Explícito)')),
                ('shouldShow', models.BooleanField(default=True, verbose_name='Mostrar produto ao cliente?')),
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='images/standard_pizzeria/products', verbose_name='Url da Imagem')),
                ('category', models.ForeignKey(default='gYOBtzVcIFN01Z7R9Utx', on_delete=django.db.models.deletion.CASCADE, to='standard_backend_app.Categoria', verbose_name='Categoria')),
            ],
            options={
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='Tamanho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição do tamanho')),
                ('flavors_quantity', models.IntegerField(default=1, verbose_name='Quantidade de Sabores')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço')),
            ],
        ),
        migrations.CreateModel(
            name='Valore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard_backend_app.Produto')),
                ('tamanho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard_backend_app.Tamanho')),
            ],
        ),
        migrations.AddField(
            model_name='produto',
            name='size_prices',
            field=models.ManyToManyField(help_text='Preço por tamanho', related_name='size', through='standard_backend_app.Valore', to='standard_backend_app.Tamanho', verbose_name='Tamanho-Preço'),
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('name', models.CharField(max_length=250, verbose_name='Nome do Cliente')),
                ('phone', models.CharField(max_length=250, verbose_name='Telefone do Cliente')),
                ('dateTime', models.DateTimeField(blank=True, default='2020-06-25T13:55:09.046189-03:00', null=True, verbose_name='Data do Registro')),
                ('coupon_id', models.CharField(max_length=100, verbose_name='Cupom de Desconto')),
                ('delivery', models.CharField(choices=[('withdraw', 'Retirada'), ('delivery', 'Entrega')], default='withdraw', max_length=100, verbose_name='Forma de Entrega')),
                ('delivery_address', models.CharField(max_length=100, verbose_name='Endereço de Entrega')),
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Total')),
                ('payment_method', models.CharField(choices=[('credit_card', 'Cartão'), ('money', 'Dinheiro')], default='credit_card', max_length=100, verbose_name='Forma de Pagamento')),
                ('payment_change', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Troco para')),
                ('picture', models.ImageField(upload_to='images/standard_pizzeria/users_pictures', verbose_name='Url da Foto')),
                ('product_list', models.ManyToManyField(help_text='Itens do Pedido', related_name='product_list', through='standard_backend_app.Item', to='standard_backend_app.Produto', verbose_name='Lista de Produtos')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='pedido',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard_backend_app.Pedido'),
        ),
        migrations.AddField(
            model_name='item',
            name='produto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard_backend_app.Produto'),
        ),
    ]
